name: Build FullStack

on:
  pull_request:
    branches:
      - main

jobs:
  build-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: API
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

  build-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build

  playwright-tests:
    runs-on: ubuntu-latest
    needs: [build-api, build-client]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install Playwright
        run: |
          cd endToEndTests
          npm ci
          npx playwright install chromium
          npm install -g wait-on serve

      - name: Start API (Release)
        working-directory: ./API
        run: |
          DOTNET_HOSTING_URLS=http://127.0.0.1:5000 nohup dotnet run --configuration Release > api.log 2>&1 &

      - name: Serve Client (prod build)
        run: |
          echo "Starting client in background..."
          nohup serve -s ../client/build -l 3000 > client.log 2>&1 &

      - name: Wait for API
        run: |
          echo "Waiting for API at http://localhost:5000..."
          sleep 5
          if ! wait-on  --timeout 30000 http://localhost:5000; then
            echo "ERROR: API did not start successfully. Check api.log"
            cat api.log
            exit 1
          fi
          echo "API is ready!"

      - name: Wait for Client
        run: |
          echo "Waiting for Client at http://localhost:3000..."
          sleep 2
          if ! wait-on  --timeout 30000 http://localhost:3000; then
            echo "ERROR: Client did not start successfully. Check client.log"
            cat client.log
            exit 1
          fi
          echo "Client is ready!"

      - name: Run Playwright tests
        run: |
          cd endToEndTests
          npx playwright test --reporter=github --reporter=html

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: endToEndTests/playwright-report
          retention-days: 7
